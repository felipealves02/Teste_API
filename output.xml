<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.12.3 on win32)" generated="2024-06-17T22:20:33.984028" rpa="false" schemaversion="5">
<suite id="s1" name="Api Test Usuarios" source="C:\CursoUdemy\RobotFramework\ApiTesting\tests\api_test_usuarios.robot">
<test id="s1-t1" name="Cenário 01: Cadastrar um novo usuario com sucesso na ServeRest" line="8">
<kw name="Criar um usuario novo" owner="api_test_usuario">
<kw name="Generate Random String" owner="String">
<msg time="2024-06-17T22:20:34.258300" level="INFO">${palavra_aleatoria} = UNPv</msg>
<var>${palavra_aleatoria}</var>
<arg>length=4</arg>
<arg>chars=[LETTERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<status status="PASS" start="2024-06-17T22:20:34.258300" elapsed="0.000000"/>
</kw>
<kw name="Convert To Lower Case" owner="String">
<msg time="2024-06-17T22:20:34.258300" level="INFO">${palavra_aleatoria} = unpv</msg>
<var>${palavra_aleatoria}</var>
<arg>${palavra_aleatoria}</arg>
<doc>Converts string to lower case.</doc>
<status status="PASS" start="2024-06-17T22:20:34.258300" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-06-17T22:20:34.259353" level="INFO">${EMAIL_TESTE} = unpv@gmail.com</msg>
<arg>${EMAIL_TESTE}</arg>
<arg>${palavra_aleatoria}@gmail.com</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-06-17T22:20:34.258300" elapsed="0.001053"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-06-17T22:20:34.259353" level="INFO">unpv@gmail.com</msg>
<arg>${EMAIL_TESTE}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-06-17T22:20:34.259353" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-17T22:20:34.258300" elapsed="0.001053"/>
</kw>
<kw name="Cadastrar o usuario criado na ServeRest" owner="api_test_usuario">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-06-17T22:20:34.260359" level="INFO">${bory} = {'nome': 'Felipe alves', 'email': 'unpv@gmail.com', 'password': '1234', 'administrador': 'true'}</msg>
<var>${bory}</var>
<arg>nome=Felipe alves</arg>
<arg>email=${EMAIL_TESTE}</arg>
<arg>password=1234</arg>
<arg>administrador=true</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-06-17T22:20:34.259353" elapsed="0.001006"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-06-17T22:20:34.260359" level="INFO">{'nome': 'Felipe alves', 'email': 'unpv@gmail.com', 'password': '1234', 'administrador': 'true'}</msg>
<arg>${bory}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-06-17T22:20:34.260359" elapsed="0.000000"/>
</kw>
<kw name="Criar Sessão na ServeRest" owner="api_test_usuario">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-06-17T22:20:34.260359" level="INFO">${headers} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<var>${headers}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-06-17T22:20:34.260359" elapsed="0.000000"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-06-17T22:20:34.260359" level="INFO">Creating Session using : alias=ServeRest, url=https://serverest.dev, headers={'accept': 'application/json', 'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=ServeRest</arg>
<arg>url=https://serverest.dev</arg>
<arg>headers=${headers}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-06-17T22:20:34.260359" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-06-17T22:20:34.260359" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-06-17T22:20:34.684948" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.2', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"nome": "Felipe alves", "email": "unpv@gmail.com", "password": "1234", "administrador": "true"}' 
 </msg>
<msg time="2024-06-17T22:20:34.684948" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '0118cdc91064c519dbfe66e3a84c94f4', 'Date': 'Tue, 18 Jun 2024 01:20:34 GMT', 'Server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "ZwHviqIa6vdyHdWl"
} 
 </msg>
<msg time="2024-06-17T22:20:34.684948" level="INFO">C:\Users\felip\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1103: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-06-17T22:20:34.687025" level="INFO">${resposta} = &lt;Response [201]&gt;</msg>
<var>${resposta}</var>
<arg>alias=ServeRest</arg>
<arg>url=/usuarios</arg>
<arg>json=${bory}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-06-17T22:20:34.260359" elapsed="0.426666"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-06-17T22:20:34.688068" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'ZwHviqIa6vdyHdWl'}</msg>
<arg>${resposta.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-06-17T22:20:34.687025" elapsed="0.001043"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-06-17T22:20:34.690065" level="INFO">${RESPOSTA} = {'message': 'Cadastro realizado com sucesso', '_id': 'ZwHviqIa6vdyHdWl'}</msg>
<arg>${RESPOSTA}</arg>
<arg>${resposta.json()}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-06-17T22:20:34.689074" elapsed="0.000991"/>
</kw>
<status status="PASS" start="2024-06-17T22:20:34.259353" elapsed="0.430712"/>
</kw>
<kw name="Conferir se o usuario foi cadastrado corretamente" owner="api_test_usuario">
<kw name="Log" owner="BuiltIn">
<msg time="2024-06-17T22:20:34.690759" level="INFO">{'message': 'Cadastro realizado com sucesso', '_id': 'ZwHviqIa6vdyHdWl'}</msg>
<arg>${RESPOSTA}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-06-17T22:20:34.690759" elapsed="0.001005"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-06-17T22:20:34.691764" level="INFO">${message} = Cadastro realizado com sucesso</msg>
<var>${message}</var>
<arg>${RESPOSTA}[message]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-06-17T22:20:34.691764" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-06-17T22:20:34.691764" level="FAIL">Cadastro realizado com sucesso != Cadastrox realizado com sucesso</msg>
<arg>${message}</arg>
<arg>Cadastrox realizado com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-06-17T22:20:34.691764" elapsed="0.000000">Cadastro realizado com sucesso != Cadastrox realizado com sucesso</status>
</kw>
<status status="FAIL" start="2024-06-17T22:20:34.690759" elapsed="0.001005">Cadastro realizado com sucesso != Cadastrox realizado com sucesso</status>
</kw>
<status status="FAIL" start="2024-06-17T22:20:34.257797" elapsed="0.434587">Cadastro realizado com sucesso != Cadastrox realizado com sucesso</status>
</test>
<status status="FAIL" start="2024-06-17T22:20:33.985025" elapsed="0.708251"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Api Test Usuarios">Api Test Usuarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
